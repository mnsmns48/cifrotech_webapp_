"""empty message

Revision ID: 05c005be3e8c
Revises: 
Create Date: 2025-03-30 17:02:50.527938

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '05c005be3e8c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('activity', 'quantity',
               existing_type=sa.SMALLINT(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('activity', 'price',
               existing_type=sa.NUMERIC(),
               type_=sa.Float(),
               existing_nullable=False)
    op.alter_column('activity', 'sum_',
               existing_type=sa.NUMERIC(),
               type_=sa.Float(),
               existing_nullable=False)
    op.drop_constraint('constraint_name', 'activity', type_='unique')
    op.alter_column('guests', 'time_',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('guests', 'id_',
               existing_type=sa.BIGINT(),
               nullable=False,
               autoincrement=True)
    op.create_unique_constraint(None, 'products', ['id'])
    op.alter_column('sellers', 'price_1',
               existing_type=sa.INTEGER(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('sellers', 'price_2',
               existing_type=sa.INTEGER(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('vendor', 'source',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('vendor', 'telegram_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('vendor', 'telegram_id',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               nullable=False)
    op.alter_column('vendor', 'source',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('sellers', 'price_2',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('sellers', 'price_1',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.drop_constraint(None, 'products', type_='unique')
    op.alter_column('guests', 'id_',
               existing_type=sa.BIGINT(),
               nullable=True,
               autoincrement=True)
    op.alter_column('guests', 'time_',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_unique_constraint('constraint_name', 'activity', ['operation_code', 'time_', 'product_code', 'quantity', 'price', 'sum_'])
    op.alter_column('activity', 'sum_',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('activity', 'price',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('activity', 'quantity',
               existing_type=sa.Integer(),
               type_=sa.SMALLINT(),
               existing_nullable=False)
    # ### end Alembic commands ###
